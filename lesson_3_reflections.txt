When would you want to use a remote repository rather than keeping all your work
local?

    Easy question: it's clearly better when we want to share and collaborate with others.
    Uhm, and yes it's a backup!

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I think it's basically the same reason for committing manually local:
    because you may want to sync only some commits or branches and do it
    when you think it's right to do.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork and clone are basically the same command,  but fork copies a repository
    from an account to another in GitHub, while clone copies it on your harddrive.
    Branches is for when you want to modify the code with something different and you
    do not want to affect the main code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It's like a pivot for us, avoids the confusion when we merge our branch into the remote
    and other people does the same: there will be conflicts, but we have a shared state of code
    for contributors.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Well, without GitHub and Git we would have harder times to syncronize changes and check-out
    all code differences.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    As we saw for local repos, using a separate branch leaves the master branch untouched!
    
